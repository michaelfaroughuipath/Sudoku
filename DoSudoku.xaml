<Activity mc:Ignorable="sap sap2010 sads" x:Class="DoSudoku" this:DoSudoku.in_Brag="Yay!" this:DoSudoku.in_ClickAgain="False" this:DoSudoku.in_Difficulty="Medium" this:DoSudoku.in_RandomEntry="False"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:aa="clr-namespace:AttendedRobotStatus.Activities;assembly=AttendedRobotStatus"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:SudokuSolver;assembly=SudokuSolver"
 xmlns:s1="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Brag" Type="InArgument(x:String)" />
    <x:Property Name="in_ClickAgain" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_Difficulty" Type="InArgument(x:String)" />
    <x:Property Name="in_RandomEntry" Type="InArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>DoSudoku_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>AttendedRobotStatus.Activities</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>SudokuSolver</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Orchestrator.Client</x:String>
      <x:String>UiPath.Orchestrator.Client.Models</x:String>
      <x:String>UiPath.Credentials.Activities</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Mail.POP3.Activities</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>UiPath.XPS.Activities</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.JSON.Activities</x:String>
      <x:String>UiPath.REST.Activities</x:String>
      <x:String>UiPath.SOAP.Activities</x:String>
      <x:String>UiPath.XML.Activities</x:String>
      <x:String>UiPath.Word</x:String>
      <x:String>GoogleSpreadsheet</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>AttendedRobotStatus</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SudokuSolver</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OrchestratorClient</AssemblyReference>
      <AssemblyReference>UiPath.Credentials.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>GoogleSpreadsheet.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="IE" DisplayName="Attach Browser (Sudoku site)" sap2010:WorkflowViewState.IdRef="BrowserScope_2" InformativeScreenshot="06884e78733534196bff051fd846f1fe" Selector="&lt;html title='Web Sudoku *' /&gt;">
    <ui:BrowserScope.Body>
      <ActivityAction x:TypeArguments="x:Object">
        <ActivityAction.Argument>
          <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
        </ActivityAction.Argument>
        <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <Sequence.Variables>
            <Variable x:TypeArguments="ui:GenericValue" Name="txt" />
            <Variable x:TypeArguments="scg:IEnumerable(ui:UiElement)" Name="children" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(of String,  String)]" Name="dictGrid" />
            <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="dictOut" />
          </Sequence.Variables>
          <ui:ForEach x:TypeArguments="x:String" DisplayName="For each (row)" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[{&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;}]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="x" />
                </ActivityAction.Argument>
                <ui:ForEach x:TypeArguments="x:String" DisplayName="For each (column)" sap2010:WorkflowViewState.IdRef="ForEach`1_7" Values="[{&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;}]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="y" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Sequence (Grab initial values)" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text (For each square)" sap2010:WorkflowViewState.IdRef="GetValue_7">
                          <ui:GetValue.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a3172f7cb54fbc7fe7bfeb5f518ecb0b" Selector="[&quot;&lt;webctrl id='f&quot; + y + x + &quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                          </ui:GetValue.Target>
                          <ui:GetValue.Value>
                            <OutArgument x:TypeArguments="ui:GenericValue">[txt]</OutArgument>
                          </ui:GetValue.Value>
                        </ui:GetValue>
                        <ui:InvokeCode ContinueOnError="{x:Null}" Code="If String.IsNullOrEmpty(value) Then&#xA; value = &quot;0&quot; ' Blank square&#xA;End If &#xA;&#xA;dict.Add(key, value)" DisplayName="Invoke code (add data to dictionary)" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                          <ui:InvokeCode.Arguments>
                            <InOutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)" x:Key="dict">[dictGrid]</InOutArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="key">[x + y]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="value">[txt]</InArgument>
                          </ui:InvokeCode.Arguments>
                        </ui:InvokeCode>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
              </ActivityAction>
            </ui:ForEach.Body>
          </ui:ForEach>
          <s:SudokuSolver DisplayName="Sudoku solver" GridDictionary="[dictGrid]" sap2010:WorkflowViewState.IdRef="SudokuSolver_2" Result="[dictOut]" />
          <If Condition="[in_RandomEntry]" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                <Sequence.Variables>
                  <Variable x:TypeArguments="sc:ArrayList" Default="[new ArrayList]" Name="randomList" />
                </Sequence.Variables>
                <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_14" Values="[dictOut.Keys]">
                  <ui:ForEach.Body>
                    <ActivityAction x:TypeArguments="x:String">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Create the Key List" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_2" MethodName="Add">
                          <InvokeMethod.TargetObject>
                            <InArgument x:TypeArguments="sc:ArrayList">[randomList]</InArgument>
                          </InvokeMethod.TargetObject>
                          <InArgument x:TypeArguments="x:String">[item]</InArgument>
                        </InvokeMethod>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEach.Body>
                </ui:ForEach>
                <While sap2010:WorkflowViewState.IdRef="While_1" Condition="[randomList.Count &gt; 0]">
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="ui:GenericValue" Name="curIndex" />
                      <Variable x:TypeArguments="s1:Random" Default="[new Random]" Name="rand" />
                      <Variable x:TypeArguments="x:String" Name="curKey" />
                    </Sequence.Variables>
                    <Assign DisplayName="Assign the next dictionary key" sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="ui:GenericValue">[curIndex]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="ui:GenericValue">[rand.Next(randomList.Count)]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <Assign DisplayName="Assign the next dictionary key" sap2010:WorkflowViewState.IdRef="Assign_6">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[curKey]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[randomList(curIndex).ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <InvokeMethod DisplayName="Invoke method" sap2010:WorkflowViewState.IdRef="InvokeMethod_4" MethodName="Remove">
                      <InvokeMethod.TargetObject>
                        <InArgument x:TypeArguments="sc:ArrayList">[randomList]</InArgument>
                      </InvokeMethod.TargetObject>
                      <InArgument x:TypeArguments="x:String">[curKey]</InArgument>
                    </InvokeMethod>
                    <ui:TypeInto DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="0" DelayMS="10" DisplayName="Type into each Square (reversed coordinates due to weird site)" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_6" SendWindowMessages="False" SimulateType="True" Text="[dictOut(curKey.Substring(1,1) + curKey.Substring(0,1))]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a3172f7cb54fbc7fe7bfeb5f518ecb0b" Selector="[&quot;&lt;webctrl id='f&quot; + curKey+&quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="NONE" />
                      </ui:TypeInto.Target>
                    </ui:TypeInto>
                  </Sequence>
                </While>
              </Sequence>
            </If.Then>
            <If.Else>
              <ui:ForEach x:TypeArguments="x:String" DisplayName="For each (row)" sap2010:WorkflowViewState.IdRef="ForEach`1_12" Values="[{&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;}]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="x" />
                    </ActivityAction.Argument>
                    <ui:ForEach x:TypeArguments="x:String" DisplayName="For each (column)" sap2010:WorkflowViewState.IdRef="ForEach`1_11" Values="[{&quot;0&quot;,&quot;1&quot;,&quot;2&quot;,&quot;3&quot;,&quot;4&quot;,&quot;5&quot;,&quot;6&quot;,&quot;7&quot;,&quot;8&quot;}]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="x:String">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="x:String" Name="y" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Sequence: Enter the data" sap2010:WorkflowViewState.IdRef="Sequence_13">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="curKey" />
                              <Variable x:TypeArguments="s1:Random" Default="[new Random]" Name="random" />
                            </Sequence.Variables>
                            <Assign DisplayName="Assign the next dictionary key" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="ui:GenericValue">[curKey]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="ui:GenericValue">[y + x]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:TypeInto DelayBetweenKeys="{x:Null}" Activate="True" ClickBeforeTyping="False" DelayBefore="0" DelayMS="10" DisplayName="Type into each Square (reversed coordinates due to weird site)" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_5" SendWindowMessages="False" SimulateType="True" Text="[dictOut(x + y)]">
                              <ui:TypeInto.Target>
                                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a3172f7cb54fbc7fe7bfeb5f518ecb0b" Selector="[&quot;&lt;webctrl id='f&quot; + curKey+&quot;' tag='INPUT' /&gt;&quot;]" WaitForReady="NONE" />
                              </ui:TypeInto.Target>
                            </ui:TypeInto>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
            </If.Else>
          </If>
          <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'INPUT'" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="97990273f13e44c51ffe7a706e6de6dd" Selector="&lt;webctrl name='submit' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
            </ui:Click.Target>
          </ui:Click>
          <aa:AttendedRobotStatus DisplayName="Attended Robot Status" ErrorLvl="False" sap2010:WorkflowViewState.IdRef="AttendedRobotStatus_1" InfoLvl="False" Message="[in_Brag]" WarnLvl="True" />
          <If Condition="[in_ClickAgain]" sap2010:WorkflowViewState.IdRef="If_1">
            <If.Then>
              <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click 'B'" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
                <ui:Click.CursorPosition>
                  <ui:CursorPosition Position="Center">
                    <ui:CursorPosition.OffsetX>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetX>
                    <ui:CursorPosition.OffsetY>
                      <InArgument x:TypeArguments="x:Int32" />
                    </ui:CursorPosition.OffsetY>
                  </ui:CursorPosition>
                </ui:Click.CursorPosition>
                <ui:Click.Target>
                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="01d4886f76491809bf97873b7c8d4d9a" Selector="[&quot;&lt;webctrl aaname='&quot; + in_Difficulty+ &quot;' tag='B' /&gt;&quot;]" WaitForReady="INTERACTIVE" />
                </ui:Click.Target>
              </ui:Click>
            </If.Then>
          </If>
        </Sequence>
      </ActivityAction>
    </ui:BrowserScope.Body>
    <sads:DebugSymbol.Symbol>d0BDOlxVc2Vyc1xNaWNoYWVsIEZhcm91Z2hcRHJvcGJveFxVSVBhdGhEZW1vXFN1ZG9rdVxEb1N1ZG9rdS54YW1sSQGbAQGiAQEFAcEBAccBAQQBdwF9AQMBVAFZAQJ0A7ECFQIBAXSXAnS8AgIBZXoJrQIUAgECflR+egIBA4EBC6MBGAIBU6QBC6QBmQECAU6lAQuJAhACAQ+KAguYAhYCAQ2ZAguZAsUBAgEKmgILrAIQAgEEgQGEAYEBhwICAWSHARGgAR4CAVSkAUakAVICAVGkAYsBpAGWAQIBT6UBGaUBKwIBEKcBD+ABGgIBJuMBD4cCHAIBEpYCngGWAssBAgEOmQKoAZkCswECAQuaAhmaAioCAQWcAg+qAhoCAQeHAY0BhwGQAgIBY40BF50BIgIBVakBRKkBVQIBJ6sBEbsBHgIBRbwBEd8BGQIBKOMBiQHjAYwCAgEl6QEVhAIiAgETqAKiAagC8wECAQiOARmVAScCAV2WARmcASkCAVarAYUBqwGVAQIBTLEBF7gBIgIBRr0BE94BHgIBK7wBTLwBZwIBKekBkgHpAZUCAgEk7wEbgQImAgEUkwFMkwFRAgFekAGsAZAB9wECAWCaAVKaAVcCAVyYAW6YAXgCAVqZAVCZAVcCAVeyARm3ASgCAUfAAUXAAVMCASzDARXKAR4CAT/LARXSAR4CATvTARXYASQCATbZARXdASMCAS3yAU3yAVsCARX0AR37ASYCAR78AR2AAisCARa2AUK2AUgCAUq0AUi0AVQCAUjIAUfIAWQCAULFAUjFAVICAUDQAUDQAV8CAT7NAUHNAUkCATzVAUTVAVACATnXAT7XAUYCATfbAagB2wHyAQIBNNkBgAHZAYQBAgEz2QHGAtkBgAMCAS/ZAXTZAXcCAS75AU/5AVYCASH2AVD2AVgCAR/+AbAB/gH6AQIBHfwBiAH8AYwBAgEc/AHOAvwB4AICARj8AXz8AX8CARc=</sads:DebugSymbol.Symbol>
  </ui:BrowserScope>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="GetValue_7" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="InvokeCode_2" sap:VirtualizedContainerService.HintSize="314,164" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="352,568.666666666667" />
      <sap2010:ViewStateData Id="ForEach`1_8" sap:VirtualizedContainerService.HintSize="878.666666666667,52.6666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SudokuSolver_2" sap:VirtualizedContainerService.HintSize="878.666666666667,22" />
      <sap2010:ViewStateData Id="InvokeMethod_2" sap:VirtualizedContainerService.HintSize="217.333333333333,134.666666666667" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="239.333333333333,258.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_14" sap:VirtualizedContainerService.HintSize="464,393.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314,60.6666666666667" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60.6666666666667" />
      <sap2010:ViewStateData Id="InvokeMethod_4" sap:VirtualizedContainerService.HintSize="314,134.666666666667" />
      <sap2010:ViewStateData Id="TypeInto_6" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="336,634">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="464,794" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="486,1351.33333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="314,60.6666666666667" />
      <sap2010:ViewStateData Id="TypeInto_5" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="336,358.666666666667">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_11" sap:VirtualizedContainerService.HintSize="352,493.333333333333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_12" sap:VirtualizedContainerService.HintSize="368,628">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="878.666666666667,1501.33333333333" />
      <sap2010:ViewStateData Id="Click_2" sap:VirtualizedContainerService.HintSize="878.666666666667,106" />
      <sap2010:ViewStateData Id="AttendedRobotStatus_1" sap:VirtualizedContainerService.HintSize="878.666666666667,22" />
      <sap2010:ViewStateData Id="Click_4" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="878.666666666667,256" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="900.666666666667,2284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_2" sap:VirtualizedContainerService.HintSize="914.666666666667,2670" />
      <sap2010:ViewStateData Id="DoSudoku_1" sap:VirtualizedContainerService.HintSize="954.666666666667,2990" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>